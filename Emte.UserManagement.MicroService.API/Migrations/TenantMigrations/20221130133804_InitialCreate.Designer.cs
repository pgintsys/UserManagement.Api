// <auto-generated />
using System;
using Emte.UserManagement.API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emte.UserManagement.MicroService.API.Migrations.TenantMigrations
{
    [DbContext(typeof(TenantDbContext))]
    [Migration("20221130133804_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Emte.UserManagement.DomainModels.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("MetaData")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("Emte.UserManagement.DomainModels.TenantStatuses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TenantStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c46f5d4-3c9d-4ef8-81fb-6c3b77670f12"),
                            Name = "Requested"
                        },
                        new
                        {
                            Id = new Guid("6068e5e9-b69b-4811-b045-40041775dc36"),
                            Name = "Approved"
                        });
                });

            modelBuilder.Entity("Emte.UserManagement.DomainModels.Tenant", b =>
                {
                    b.HasOne("Emte.UserManagement.DomainModels.TenantStatuses", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
